model Election {
  id             Int       @id @default(autoincrement())
  name           String    @default("New Election")
  description    String    @default("Sample Description")
  start          DateTime?
  end            DateTime?
  candidateStart DateTime?
  candidateEnd   DateTime?
  published      Boolean   @default(false)

  admins  User[]
  roles   Role[]
  voters  Voter[]
  ballots Ballot[]
}

model Voter {
  userID String  @id
  voted  Boolean @default(false)

  election   Election @relation(fields: [electionID], references: [id], onDelete: Cascade)
  electionID Int
  // Cannot link with Ballot/Vote due to traceability
}

model Ballot {
  id       Int      @id @default(autoincrement())
  election Election @relation(fields: [electionID], references: [id], onDelete: Cascade)

  electionID Int

  votes Vote[]
}

model Vote {
  ballot    Ballot    @relation(fields: [ballotID], references: [id], onDelete: Cascade)
  role      Role      @relation(fields: [roleID], references: [id], onDelete: Cascade)
  candidate Candidate @relation(references: [id], fields: [candidateID], onDelete: Cascade)
  position  Int

  roleID      Int
  ballotID    Int
  candidateID Int

  @@unique([ballotID, candidateID])
}

model Role {
  id          Int      @id @default(autoincrement())
  election    Election @relation(fields: [electionID], references: [id], onDelete: Cascade)
  name        String   @default("New Role")
  seatsToFill Int      @default(1)

  electionID Int

  candidates Candidate[]
  votes      Vote[]
}

model Candidate {
  id          Int    @id @default(autoincrement())
  description String @default("")
  role        Role   @relation(fields: [roleID], references: [id], onDelete: Cascade)

  roleID Int

  users User[]
  votes Vote[]
}
