model Election {
  id             Int       @id @default(autoincrement())
  name           String    @default("New Election")
  description    String    @default("Sample Description")
  start          DateTime?
  end            DateTime?
  candidateStart DateTime?
  candidateEnd   DateTime?
  published      Boolean   @default(false)

  admins     User[]
  roles      Role[]
  voters     Voter[]
  ballots    Ballot[]
  candidates Candidate[]
}

model Voter {
  user     User     @relation(fields: [userID], references: [uniID], onDelete: Cascade)
  election Election @relation(fields: [electionID], references: [id], onDelete: Cascade)
  voted    Boolean  @default(false)

  userID     String
  electionID Int
  // Cannot link with Ballot/Vote due to traceability

  @@unique([userID, electionID])
}

model Ballot {
  id       Int      @id @default(autoincrement())
  election Election @relation(fields: [electionID], references: [id], onDelete: Cascade)

  electionID Int

  votes Vote[]
}

model Vote {
  ballot    Ballot    @relation(fields: [ballotID], references: [id], onDelete: Cascade)
  role      Role      @relation(fields: [roleID], references: [id], onDelete: Cascade)
  candidate Candidate @relation(references: [id], fields: [candidateID], onDelete: Cascade)
  position  Int

  roleID      Int
  ballotID    Int
  candidateID Int

  // Only one vote per role per ballot
  @@unique([ballotID, roleID])
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @default("New Role")
  seatsToFill Int      @default(1)
  election    Election @relation(fields: [electionID], references: [id], onDelete: Cascade)

  electionID Int

  candidates Candidate[]
  votes      Vote[]
}

model Candidate {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @default("")
  election    Election @relation(fields: [electionID], references: [id], onDelete: Cascade)

  electionID Int

  users User[]
  roles Role[]
  votes Vote[]
}
